{"version":3,"file":"searcher.js","sourceRoot":"","sources":["../src/searcher.ts"],"names":[],"mappings":"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","sourcesContent":["import { ArrayBufferStream, IntArray, CharArray, ShortArray } from \"./util\";\nimport { KeyStream } from \"./keystream\";\nimport { Node } from \"./node\";\n\nexport class Searcher {\n  keySetSize: number;\n  begs: IntArray;\n  base: IntArray;\n  lens: ShortArray;\n  chck: CharArray;\n  tail: string;\n  constructor(buffer: Uint8Array, bigendian?: boolean) {\n    const fmis = new ArrayBufferStream(buffer, bigendian);\n    const nodeSz = fmis.getInt();\n    const tindSz = fmis.getInt();\n    const tailSz = fmis.getInt();\n    this.keySetSize = tindSz;\n    this.begs = fmis.getIntArray(tindSz);\n    this.base = fmis.getIntArray(nodeSz);\n    this.lens = fmis.getShortArray(tindSz);\n    this.chck = fmis.getCharArray(nodeSz);\n    this.tail = fmis.getString(tailSz);\n  }\n\n  size() {\n    return this.keySetSize;\n  }\n\n  search(key: string) {\n    const base = this.base;\n    const chck = this.chck;\n\n    let node = base.get(0);\n    const kin = new KeyStream(key);\n    const code: any = kin.read();\n    while (true) {\n      const idx = node + code;\n      node = base.get(idx);\n      if (chck.get(idx) === code) {\n        if (node >= 0) {\n          continue;\n        } else if (kin.eos() || this.keyExists(kin, node)) {\n          return Node.Base.ID(node);\n        }\n      }\n      return -1;\n    }\n  }\n\n  eachCommonPrefix(\n    key: string,\n    start: number,\n    fn: (start: number, offset: number, trieId: number) => void\n  ) {\n    const { base, chck } = this;\n\n    let node = base.get(0);\n    let offset = -1;\n    const kin = new KeyStream(key, start);\n\n    while (true) {\n      const code = kin.read().charCodeAt(0);\n      offset++;\n      const terminalIdx = node + Node.Chck.TERMINATE_CODE;\n      if (chck.get(terminalIdx) == Node.Chck.TERMINATE_CODE) {\n        fn(start, offset, Node.Base.ID(base.get(terminalIdx)));\n        if (code == Node.Chck.TERMINATE_CODE) {\n          return;\n        }\n      }\n      const idx = node + code;\n      node = base.get(idx);\n\n      if (chck.get(idx) == code) {\n        if (node >= 0) {\n          continue;\n        } else {\n          this.call_if_keyIncluding(kin, node, start, offset, fn);\n        }\n      }\n      return;\n    }\n  }\n\n  call_if_keyIncluding(\n    kin: KeyStream,\n    node: number,\n    start: number,\n    offset: number,\n    fn: any\n  ) {\n    const nodeId = Node.Base.ID(node);\n    if (\n      kin.startsWith(this.tail, this.begs.get(nodeId), this.lens.get(nodeId))\n    ) {\n      fn(start, offset + this.lens.get(nodeId) + 1, nodeId);\n    }\n  }\n\n  keyExists(kin: KeyStream, node: number) {\n    const nodeId = Node.Base.ID(node);\n    const beg = this.begs.get(nodeId);\n    const s = this.tail.substring(beg, beg + this.lens.get(nodeId));\n    return kin.rest() == s;\n  }\n}\n"]}